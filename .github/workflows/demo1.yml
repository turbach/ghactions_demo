# Notes
# 
# conda wrangling. To run shells with conda activate yenv, the conda
# shell.bash hook must be installed. The user-friendly conda init bash
# updates .bashrc which is only consulted for interactive shells. The
# workaround here is to update .bash_profile with the hook and set
# bash -l {0} to run bash as a login shell so .bash_profile is
# consulted.  After this conda activate works for subsequent job run:
# steps. Alternatively, the hook can be installed on the fly in each
# run: step with
# 
#   - eval "$(conda shell.bash hook)"
#   - conda activate myenv

name: demo1

defaults:
  run:
    shell:
      # as login shell for conda envs
      bash -l {0}
      # bash -i {0}

env:
  PACKAGE_NAME: ghactions_demo
  SPHINX_DOCS_PATH: $HOME/docs
  SPHIX_DOCS_HTML: $HOME/docs/build/html
  CONDA_BLD_PATH: $HOME/conda_bld_dir

on:
  # all branchs, exclude tags
  push:
    branches: ["*"]
    tags-ignore: ["*"]

  pull_request:
    types:
      - opened
      - reopened
      - ready_for_review

  # there is no way to filter tags or branches here
  release:
    types: 
      - published

jobs:
  ci:
    runs-on: [ubuntu-latest]
    strategy:
      matrix:
        pyver: ["3.6", "3.7", "3.8"]
    env:
      PY_VER: ${{ matrix.pyver }}

    steps:
      - uses: actions/checkout@v2

      - name: setup miniconda
        run: |
          wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
          bash miniconda.sh -b -p $HOME/miniconda
          mkdir -p $CONDA_BLD_PATH

          # replacement for conda init bash which targets .bashrc
          conda shell.bash hook >> ~/.bash_profile

      - name: test conda activate
        run: |
          conda activate 
          conda config --set always_yes yes --set changeps1 no --set bld_path $CONDA_BLD_PATH
          hash -r 

      - name: build conda pkg
        run: |
          echo "building conda pkg $PY_VER"
          tarball=$CONDA_BLD_PATH/$PACKAGE_NAME-0.0.0-${PY_VER}_g${GITHUB_SHA:0:8}.tar.bz2
          echo "TARBALL=$tarball" >> $GITHUB_ENV

      - name: create conda env
        run: |
          conda create -n pyenv_$PY_VER python=$PY_VER
          conda activate $PY_VER

      - name: pytest
        run: echo pytesting $PY_VER label=$CONDA_LABEL for TARBALL=$TARBALL

      - name: set conda label
        run: |
          # version M.N.P.dev on dev branch uploads to conda pre-release and test.pypi.org
          if [[ \
            $GITHUB_REF == refs/branch/dev && \
            $TARBALL =~ $PACKAGE_NAME-([0-9]+\.){3}dev[0-9]+-${PY_VER} \
          ]]; then \
            conda_label="pre-release"; \
          fi

          # version M.N.P on tagged release vM.N.P uploads to label main and pypi.org
          if [[ \
            $GITHUB_REF =~ refs/tag/v[0-9]+\.[0-9]+\.[0-9] && \
            $TARBALL =~ $PACKAGE_NAME-([0-9]+\.){2}[0-9]+-${PY_VER} \
          ]]; then \
            conda_label="main"; \
          fi

          # conda label defaults to ci_test if not set to pre-release or main
          echo "CONDA_LABEL=${conda_label:-ci_test}" >> $GITHUB_ENV

      - name: log deploy variables
        run: echo $GITHUB_REF PY_VER=$PY_VER CONDA_LABEL=$CONDA_LABEL TARBALL=$TARBALL

      # - name: local action test
      #   uses: ./.github/actions/conda-build

      - name: deploy conda pkg
        run: echo conda upload $PY_VER label=$CONDA_LABEL for TARBALL=$TARBALL

      - name: build sphinx docs
        run: echo building sphinx docs $PY_VER label=$CONDA_LABEL for TARBALL=$TARBALL

      - name: build sdist
        if: ${{ env.PY_VER == '3.8' }}
        run: echo building sdist $PY_VER label=$CONDA_LABEL for TARBALL=$TARBALL

      - name: deploy sdist test.pypi
        if: ${{ env.PY_VER == '3.8' }}
        run: echo uploading sdist to TEST.pypi.org $PY_VER label=$CONDA_LABEL for TARBALL=$TARBALL

      - name: deploy sphinx docs
        if: ${{ env.PY_VER == '3.8' && env.CONDA_LABEL == 'main' }}
        run: echo ghpages upload $PY_VER label=$CONDA_LABEL for TARBALL=$TARBALL

      - name: deploy sdist pypi
        if: ${{ env.PY_VER == '3.8' && env.CONDA_LABEL == 'main' }}
        run: echo uploading sdist to PYPI.org $PY_VER label=$CONDA_LABEL for TARBALL=$TARBALL
